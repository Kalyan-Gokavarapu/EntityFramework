// <auto-generated />
using System;
using EntityFramework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EntityFramework.Migrations
{
    [DbContext(typeof(PatientContext))]
    partial class PatientContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EntityFramework.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int?>("Patientid")
                        .HasColumnType("integer");

                    b.Property<string>("Pin")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Patientid");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EntityFramework.Models.Email", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<int?>("Patientid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Patientid");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("EntityFramework.Models.Exam", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ExamCode")
                        .HasColumnType("text");

                    b.Property<string>("Modality")
                        .HasColumnType("text");

                    b.Property<int?>("Patientid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Patientid");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("EntityFramework.Models.Patient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("MRN")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("EntityFramework.Models.Address", b =>
                {
                    b.HasOne("EntityFramework.Models.Patient", null)
                        .WithMany("Addresses")
                        .HasForeignKey("Patientid");
                });

            modelBuilder.Entity("EntityFramework.Models.Email", b =>
                {
                    b.HasOne("EntityFramework.Models.Patient", null)
                        .WithMany("Emails")
                        .HasForeignKey("Patientid");
                });

            modelBuilder.Entity("EntityFramework.Models.Exam", b =>
                {
                    b.HasOne("EntityFramework.Models.Patient", null)
                        .WithMany("Exams")
                        .HasForeignKey("Patientid");
                });
#pragma warning restore 612, 618
        }
    }
}
